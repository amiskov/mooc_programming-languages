(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{154:function(t,e,s){"use strict";s.r(e);var i=s(0),a=Object(i.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._m(1),t._m(2),t._m(3),s("p",[t._v("В любом языке есть 3 строительных блока для составных типов:")]),t._m(4),s("p",[t._v("Очень многие структуры данных можно описать этими тремя способами.")]),t._m(5),t._m(6),t._m(7),t._m(8),s("p",[t._v("ООП делает one of type по-другому (через подтипы и подклассы). Разобрать отличие между ФП и ООП в этом плане — одна из ключевых задач курса.")]),t._m(9),t._m(10),s("p",[t._v("Порядок полей в Record не имеет значения. При выводе REPL их сортирует по алфавиту.")]),t._m(11),t._m(12),t._m(13),t._m(14),s("p",[t._v("На самом деле в ML есть записи, а кортежи – это частный случай записей с ключами-цифрами по порядку:")]),t._m(15),t._m(16),s("p",[t._v("Создание своего типа данных:")]),t._m(17),t._m(18),s("p",[t._v("Так создаются типы данных. Теперь нужно как-то получать данные:")]),t._m(19),t._m(20),t._m(21),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),t._m(31),t._m(32),s("p",[t._v("Паттерн-матчинг позволяет обойтись без явного указания типов. При сопоставлении тайп-чекер сам все поймет:")]),t._m(33),t._m(34),t._m(35),t._m(36),s("p",[t._v("Можно делать так:")]),t._m(37),t._m(38),t._m(39),s("p",[t._v("ML не дает сравнивать "),s("code",[t._v("real")]),t._v("-числа с помощью равенства. "),s("code",[t._v("real")]),t._v(" is not an equality type. "),s("a",{attrs:{href:"http://sml-family.org/Basis/real.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Тут"),s("OutboundLink")],1),t._v(" внизу есть рассуждения на эту тему.")]),t._m(40),t._m(41),t._m(42),t._m(43),t._m(44),t._m(45),t._m(46),s("p",[t._v("Хороший стиль кода:")]),t._m(47),t._m(48),t._m(49),t._m(50),t._m(51),s("p",[t._v("Надо аккуратно с рекурсивными аппендами. Там хвостовая оптимизация критична.")]),t._m(52),s("p",[t._v("При обработке деревьев хвостовая оптимизация не даст преимущества. Все равно надо где-то сохранять данные, а это соизмеримо с заполнением стэка.")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"недеnя-iii-datatypes-pattern-matching-tail-recursion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#недеnя-iii-datatypes-pattern-matching-tail-recursion","aria-hidden":"true"}},[this._v("#")]),this._v(" Неделя III: Datatypes, pattern-matching, tail recursion")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Создаем свои типы и работаем с ними:")]),e("li",[this._v("составные данные")]),e("li",[this._v("pattern matching")]),e("li",[this._v("Исключения")]),e("li",[this._v("Хвостовая рекурсия")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"building-compound-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#building-compound-types","aria-hidden":"true"}},[this._v("#")]),this._v(" Building Compound Types")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Basic types: int, char, real, unit")]),e("li",[this._v("Compound type: tuples, lists, options")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("Each of")]),t._v(": тип "),s("code",[t._v("t")]),t._v(" представляется каждым из типов "),s("code",[t._v("t1, t2, ..., tn")]),t._v(". Например, координата точки ("),s("code",[t._v("x")]),t._v(", "),s("code",[t._v("y")]),t._v(", "),s("code",[t._v("z")]),t._v(") или имя и фамилия (имя - "),s("code",[t._v("t1")]),t._v(", фамилия - "),s("code",[t._v("t2")]),t._v(").")]),s("li",[s("code",[t._v("One of")]),t._v(": "),s("code",[t._v("t")]),t._v(" может быть какого-то одного типа: или "),s("code",[t._v("t1")]),t._v(" или "),s("code",[t._v("t2")]),t._v(" или "),s("code",[t._v("tn")]),t._v(". Например, статус принтера. Он может или печатать, или глючить, или зажевать бумагу. Сразу во всех статусах он быть не может.")]),s("li",[s("code",[t._v("Self reference")]),t._v(": "),s("code",[t._v("list")]),t._v(" может содержать другой "),s("code",[t._v("list")]),t._v(", это надо учесть (рекурсивная структура данных).")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"примеры"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#примеры","aria-hidden":"true"}},[this._v("#")]),this._v(" Примеры")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Typles — each of: "),s("code",[t._v("(int * bool)")]),t._v(" — кортеж (пара) число и булево значение.")]),s("li",[t._v("Option — one of: "),s("code",[t._v("int option")]),t._v(" — или число или пустота.")]),s("li",[t._v("List — использует все 3 способа. "),s("code",[t._v("int list")]),t._v(" может содержат числа, списки чисел или не содержать ничего.")]),s("li",[t._v("Можно наследовать составные типы: "),s("code",[t._v("((int * int) option * (int list list)) option")]),t._v(".")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Records — как Typles, но вместо "),e("code",[this._v("#1")]),this._v(" и "),e("code",[this._v("#2")]),this._v(" у них есть именованные поля. Как кортежи с синтаксическим сахаром. Для собственных данных типа "),e("code",[this._v("each of")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Можно сделать свой one of. Например, тип может содержать "),e("code",[this._v("int")]),this._v(" или "),e("code",[this._v("string")]),this._v(". + pattern matching.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"records"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#records","aria-hidden":"true"}},[this._v("#")]),this._v(" Records")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Составной тип данных, представляет собой "),e("code",[this._v("each of")]),this._v(" type.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("val x = {bar=(3,true),baz=(false,9),foo=7}\n(* : {bar:int * bool, baz:bool * int, foo:int} *)\n\n#bar x; (* достать значение из `x` *)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Тип "),e("code",[this._v("x")]),this._v(" будет такой: "),e("code",[this._v("val it = {bar=(3,true),baz=(false,9),foo=7}")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("В кортежах важна последовательность: "),e("code",[this._v("(4, 7, 9)")]),this._v(", в записях (Records) все по именам, более наглядно.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"tuples-as-syntactic-sugar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tuples-as-syntactic-sugar","aria-hidden":"true"}},[this._v("#")]),this._v(" Tuples as Syntactic Sugar")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("val x = {1=3+2, 3=7, 2=true};\n(* val x = (5,true,7) : int * bool * int — котеж *)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"datatype-bindings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#datatype-bindings","aria-hidden":"true"}},[this._v("#")]),this._v(" Datatype Bindings")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('datatype mytype = \n    TwoInts of int * int \n    | Str of string\n    | Pizza\n\nval x = TwoInts(2, 3); (* Конструктор – с большой буквы (соглашение) *)\n\n(* TwoInts — tag union (вариант, ветка паттерн-матчинга); (2, 3) — corresponding data *)\n\nval y = Str("hello");\nval z = Pizza; (* без `of [sometype]` это просто value типа mytype, не конструктор *)\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Получили one of type: может быть 1-м из трех. "),e("code",[this._v("mytype")]),this._v(" может быть получен с помощью одного из трех конструкторов.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Проверить, какой конструктор их создал")]),e("li",[this._v("Извлечь данные")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"case-expressions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#case-expressions","aria-hidden":"true"}},[this._v("#")]),this._v(" Case Expressions")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("См. "),e("code",[this._v("case.sml")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Multibranch conditional. Как "),e("code",[this._v("switch/case")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"type-synonyms"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-synonyms","aria-hidden":"true"}},[this._v("#")]),this._v(" Type Synonyms")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("datatype suit = Club | Diamond | Heart | Spade\ndatatype rank = Jack | Queen | King | Ace | Num of int\ntype card = suit * rank (* Чтоб не писать `suit * rank` *)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"lists-and-options-are-datatypes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lists-and-options-are-datatypes","aria-hidden":"true"}},[this._v("#")]),this._v(" Lists and Options are Datatypes")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("В Options "),e("code",[this._v("NONE")]),this._v(" и "),e("code",[this._v("SOME")]),this._v(" — конструкторы, их можно использовать в "),e("code",[this._v("case...of")]),this._v(":")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("fun inc_or_zero intoption =\n    case intoption of\n        NONE => 0\n      | SOME i => i + 1\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("В списках "),s("code",[t._v("[]")]),t._v(" и "),s("code",[t._v("::")]),t._v(" — конструкторы. "),s("code",[t._v("[]")]),t._v(" — пустой список (вместо "),s("code",[t._v("null")]),t._v(", "),s("code",[t._v("::")]),t._v(" — не пустой (вместо "),s("code",[t._v("hd")]),t._v(" и "),s("code",[t._v("tl")]),t._v("):")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("fun sum_list xs =\n    case xs of\n        [] => 0\n      | x::xs' => x + sum_list xs';\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"polymorphic-datatypes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#polymorphic-datatypes","aria-hidden":"true"}},[this._v("#")]),this._v(" Polymorphic Datatypes")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("Списки (list) на самом деле имеют тип "),s("code",[t._v("'a list")]),t._v(" (альфа-лист). И уже при объявлении они становятся "),s("code",[t._v("int list")]),t._v(", "),s("code",[t._v("string list")]),t._v(" и т. д. То есть "),s("code",[t._v("list")]),t._v(" это такая фабрика типов.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"each-of-pattern-matching-truth-about-functions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#each-of-pattern-matching-truth-about-functions","aria-hidden":"true"}},[this._v("#")]),this._v(" Each of Pattern Matching / Truth About Functions")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('fun sum_triple3 (x, y, z) = x + y + z;\nfun full_name3 {first=x, middle=y, last=z} = x ^ " " ^ y ^ " " ^z;\n\nval x = sum_triple3(1, 2, 3);\nval y = full_name3({first="Andrey", middle="Y.", last="Miskov"});\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Функции в ML принимают "),e("strong",[this._v("только один аргумент")]),this._v(" и потом используют паттерн-матчинг. Такая запись: "),e("code",[this._v("fun sum_triple(x, y, z)")]),this._v(" принимает и кортеж из трех элементов и это выглядит типа как аргументы функции. На самом деле функция всегда принимает только один аргумент и у него уже есть свой тип.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Даже функция "),e("code",[this._v("fun hello() = ...")]),this._v(" принимает 1 аргумент. Тип "),e("code",[this._v("unit")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"a-little-type-inference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a-little-type-inference","aria-hidden":"true"}},[this._v("#")]),this._v(" A Little Type Inference")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("fun partial_sum (x, y, z) = \n    x + z (* `y` не используется, это нормально *)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Т. к. "),e("code",[this._v("y")]),this._v(" не используется, ML дает ему тип "),e("code",[this._v("'a")]),this._v(" (альфа) и мы можем передавать вторым аргументом (на самом деле вторым элементом кортежа, т. к. в функциях всего 1 аргумент) значение любого типа. Unexpected polymorphism.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"polymorphic-and-equality-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#polymorphic-and-equality-types","aria-hidden":"true"}},[this._v("#")]),this._v(" Polymorphic and Equality Types")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("(* has type ''a * ''a -> string *)\nfun same_thing(x,y) = if x=y then \"yes\" else \"no\" \n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Так тайп-чекер не поймет, какой тип будет передаваться. Он скажет "),e("code",[this._v("Warning: calling polyEqual")]),this._v(". Передано может быть что угодно и ты рискуешь сравнивать, например, строку с интом, что повлечет ошибку.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"nested-patterns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nested-patterns","aria-hidden":"true"}},[this._v("#")]),this._v(" Nested Patterns")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"more-nested-patterns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#more-nested-patterns","aria-hidden":"true"}},[this._v("#")]),this._v(" More Nested Patterns")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-sml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("fun nondecreasing xs =\n    case xs of\n    [] => true\n      | _::[] => true\n      | head::(neck::rest) => (head <= neck andalso nondecreasing (neck::rest))\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("head::(neck::tail)")]),this._v(" matches list witn 2 or more elements.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("_::[] => true")]),this._v(" — если справа от "),e("code",[this._v("=>")]),this._v(" переменная не используется, то принято ее обозначать "),e("code",[this._v("_")]),this._v(".")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Избегать вложенных "),s("code",[t._v("case ... of")]),t._v(". Лучше использовать больше бранчей на первом уровне с вложенным pattern matching. См. "),s("code",[t._v("unzip3")]),t._v(", "),s("code",[t._v("nondecreasing")]),t._v(".")]),s("li",[t._v("Часто полезно делать матчинг на кортежах. См. "),s("code",[t._v("zip3")]),t._v(", "),s("code",[t._v("multsign")]),t._v(".")]),s("li",[t._v("Wildcards instead of variables (использовать "),s("code",[t._v("_")]),t._v(", если переменная справа от "),s("code",[t._v("=>")]),t._v(" не используется). См. "),s("code",[t._v("len")]),t._v(", "),s("code",[t._v("multsign")]),t._v(".")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"nested-patterns-precisely"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nested-patterns-precisely","aria-hidden":"true"}},[this._v("#")]),this._v(" Nested Patterns Precisely")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"function-patterns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#function-patterns","aria-hidden":"true"}},[this._v("#")]),this._v(" Function Patterns")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"exceptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exceptions","aria-hidden":"true"}},[this._v("#")]),this._v(" Exceptions")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"tail-recursion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tail-recursion","aria-hidden":"true"}},[this._v("#")]),this._v(" Tail Recursion")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"perspective-on-tail-recursion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#perspective-on-tail-recursion","aria-hidden":"true"}},[this._v("#")]),this._v(" Perspective on Tail Recursion")])}],!1,null,null,null);e.default=a.exports}}]);